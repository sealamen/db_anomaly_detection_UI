import streamlit as st


def run():
    st.set_page_config(page_title="프로젝트 개요", layout="wide")

    st.title("📖 프로젝트 개요")

    # 1. 기존 프로젝트와의 차이점
    st.header("1️⃣ 기존 이상탐지 프로젝트와의 차이점")
    st.markdown("""
    **🟢 기존 DB 이상탐지 프로젝트**
    - 정상적인 트랜잭션과 다른 행동을 탐지  
    - 활용: 보안, 사기 탐지
    - 접근: **분류 문제, 이상치 탐지 문제**
    - 예시
      - 동일 계정이 1분 동안 100번 로그인 시도
      - 평소보다 큰 금액 이체
      - 쿼리 패턴이 갑자기 달라짐 (SELECT → DELETE)

    **🔵 머신러닝 기반 운영 DB 성능 이상탐지**
    - DB 자체가 느려지거나 부하 발생 여부 확인  
    - 운영 DB 성능 지표 수집 → ML/DL로 이상 탐지  
    - 활용: **시스템 모니터링, 장애 예측**
    - 접근: **시계열 이상탐지, 비지도 학습**
    - 예시
      - 쿼리 실행 시간이 갑자기 폭등
      - Lock wait 급증 → 응답 정지
      - TPS 비정상적 증가
    """)

    # 2. 머신러닝을 사용하는 이유
    st.header("2️⃣ 이상탐지에 머신러닝을 사용하는 이유")
    st.markdown("""
    **Threshold 기반 탐지**
    - 단순 규칙: CPU > 90% → 이상
    - 쉽지만, **패턴 변화·복합 상황** 탐지 어려움

    **머신러닝 기반 탐지**
    - 상황별 정상 범위 학습 가능 (시간/요일/업무량에 따라 다름)
    - **복합 패턴 이상** 탐지 가능
    - **새로운 유형의 문제**도 대응
    """)

    # 3. 기존 오라클 기능과의 차이
    st.header("3️⃣ 기존 오라클 기능과의 차이점")
    st.markdown("""
    - Oracle Autonomous DB, OML, ADW, OCI Anomaly Detection 등은 **내부 데이터 기반 ML** 지원
    - 하지만 **비용 문제** 때문에 많은 기업에서 사용하지 않음
    - 본 프로젝트는 **alert.log + V$뷰 + 사용자 정의 조건**을 종합해 **더 풍부한 이상 정의** 가능  

    💡 예:  
    `CPU 급등` + `에러 로그 발생` + `Redo I/O Spike` → **복합 이상 이벤트 탐지**
    """)

    # 4. 프로젝트 목표
    st.header("4️⃣ 프로젝트 목표")
    st.markdown("""
    - Oracle 운영 DB에서 발생하는 **성능 메트릭** (V$ 뷰, AWR/ASH, alert.log 등)을 주기적으로 수집
    - 정상 패턴을 학습 → 실시간 또는 근실시간으로 성능 이상 자동 탐지
    - 주요 탐지 이벤트:
      - 지연 시간 급증
      - 락 경쟁
      - TPS 급증
      - 에러 폭증
    """)

st.set_page_config(page_title="프로젝트 개요", layout="wide")

st.title("📖 프로젝트 개요")

# 1. 기존 프로젝트와의 차이점
st.header("1️⃣ 기존 이상탐지 프로젝트와의 차이점")
st.markdown("""
**🟢 기존 DB 이상탐지 프로젝트**
- 정상적인 트랜잭션과 다른 행동을 탐지  
- 활용: 보안, 사기 탐지
- 접근: **분류 문제, 이상치 탐지 문제**
- 예시
  - 동일 계정이 1분 동안 100번 로그인 시도
  - 평소보다 큰 금액 이체
  - 쿼리 패턴이 갑자기 달라짐 (SELECT → DELETE)

**🔵 머신러닝 기반 운영 DB 성능 이상탐지**
- DB 자체가 느려지거나 부하 발생 여부 확인  
- 운영 DB 성능 지표 수집 → ML/DL로 이상 탐지  
- 활용: **시스템 모니터링, 장애 예측**
- 접근: **시계열 이상탐지, 비지도 학습**
- 예시
  - 쿼리 실행 시간이 갑자기 폭등
  - Lock wait 급증 → 응답 정지
  - TPS 비정상적 증가
""")

# 2. 머신러닝을 사용하는 이유
st.header("2️⃣ 이상탐지에 머신러닝을 사용하는 이유")
st.markdown("""
**Threshold 기반 탐지**
- 단순 규칙: CPU > 90% → 이상
- 쉽지만, **패턴 변화·복합 상황** 탐지 어려움

**머신러닝 기반 탐지**
- 상황별 정상 범위 학습 가능 (시간/요일/업무량에 따라 다름)
- **복합 패턴 이상** 탐지 가능
- **새로운 유형의 문제**도 대응
""")

# 3. 기존 오라클 기능과의 차이
st.header("3️⃣ 기존 오라클 기능과의 차이점")
st.markdown("""
- Oracle Autonomous DB, OML, ADW, OCI Anomaly Detection 등은 **내부 데이터 기반 ML** 지원
- 하지만 **비용 문제** 때문에 많은 기업에서 사용하지 않음
- 본 프로젝트는 **alert.log + V$뷰 + 사용자 정의 조건**을 종합해 **더 풍부한 이상 정의** 가능  

💡 예:  
`CPU 급등` + `에러 로그 발생` + `Redo I/O Spike` → **복합 이상 이벤트 탐지**
""")

# 4. 프로젝트 목표
st.header("4️⃣ 프로젝트 목표")
st.markdown("""
- Oracle 운영 DB에서 발생하는 **성능 메트릭** (V$ 뷰, AWR/ASH, alert.log 등)을 주기적으로 수집
- 정상 패턴을 학습 → 실시간 또는 근실시간으로 성능 이상 자동 탐지
- 주요 탐지 이벤트:
  - 지연 시간 급증
  - 락 경쟁
  - TPS 급증
  - 에러 폭증
""")